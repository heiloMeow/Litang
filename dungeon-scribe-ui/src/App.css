/* =======================================
   App.css — Application Shell Layout Styles
   App.css — 应用外壳布局样式
   ---------------------------------------
   - Only controls top-level structure (Header + Main)
   - Does NOT control component visuals
   - 仅负责顶层结构（Header + Main）
   - 不负责具体组件的视觉样式
   ======================================= */

/* Root elements fill the full height to support flex layout
   根节点占满高度，保证 Flex 布局能撑满屏幕 */
html, body, #root {
  height: 100%;
  min-height: 100dvh;  /* Dynamic viewport height for mobile compatibility / 动态视口高度，兼容移动端 */
}

/* Body base setup
   - Remove default margin
   - Apply dark background and light text
   - Do not center here; centering is handled by individual pages
   Body 的基础设置
   - 去掉默认 margin
   - 应用深色背景和浅色字体
   - 不在此居中，居中由页面自己决定 */
body {
  margin: 0;
  background: #242424;
  color: rgba(255, 255, 255, 0.87);
  display: block;
}

/* Application shell container
   - Vertical flex layout
   - Header stays on top, Main fills remaining space
   App 外层容器
   - 使用纵向 Flex 布局
   - Header 固定在上，Main 占满剩余空间 */
.app-shell {
  min-height: 100dvh;
  display: flex;
  flex-direction: column;
}

/* Main content area
   - Takes remaining space
   - Pages (SessionPage / Timeline / etc.) manage their own layout
   - Hide scrollbars on the main container
   主内容区域
   - 占满剩余空间
   - 页面（SessionPage / Timeline / 等）自行决定布局
   - 隐藏主区域自身滚动条 */
.app-main {
  flex: 1;         /* 把剩余高度交给 main */
  min-height: 0;   /* 防止子元素被挤爆 */
  display: flex;   /* 让子页可以继续 flex 拉伸 */
  flex-direction: column;
}
